<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gm.demo.crawler.dao.mapper.ExtractionMapper" >
  <resultMap id="BaseResultMap" type="com.gm.demo.crawler.dao.model.Extraction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tab" property="tab" jdbcType="VARCHAR" />
    <result column="page" property="page" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="VARCHAR" />
    <result column="filters" property="filters" jdbcType="VARCHAR" />
    <result column="echo" property="echo" jdbcType="VARCHAR" />
    <result column="extracts" property="extracts" jdbcType="VARCHAR" />
    <result column="api_example" property="apiExample" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, tab, page, data, filters, echo, extracts, api_example
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from extraction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from extraction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gm.demo.crawler.dao.model.Extraction" >
    insert into extraction (id, tab, page, 
      data, filters, echo, 
      extracts, api_example)
    values (#{id,jdbcType=INTEGER}, #{tab,jdbcType=VARCHAR}, #{page,jdbcType=VARCHAR}, 
      #{data,jdbcType=VARCHAR}, #{filters,jdbcType=VARCHAR}, #{echo,jdbcType=VARCHAR}, 
      #{extracts,jdbcType=VARCHAR}, #{apiExample,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gm.demo.crawler.dao.model.Extraction" >
    insert into extraction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tab != null" >
        tab,
      </if>
      <if test="page != null" >
        page,
      </if>
      <if test="data != null" >
        data,
      </if>
      <if test="filters != null" >
        filters,
      </if>
      <if test="echo != null" >
        echo,
      </if>
      <if test="extracts != null" >
        extracts,
      </if>
      <if test="apiExample != null" >
        api_example,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tab != null" >
        #{tab,jdbcType=VARCHAR},
      </if>
      <if test="page != null" >
        #{page,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="filters != null" >
        #{filters,jdbcType=VARCHAR},
      </if>
      <if test="echo != null" >
        #{echo,jdbcType=VARCHAR},
      </if>
      <if test="extracts != null" >
        #{extracts,jdbcType=VARCHAR},
      </if>
      <if test="apiExample != null" >
        #{apiExample,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gm.demo.crawler.dao.model.Extraction" >
    update extraction
    <set >
      <if test="tab != null" >
        tab = #{tab,jdbcType=VARCHAR},
      </if>
      <if test="page != null" >
        page = #{page,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=VARCHAR},
      </if>
      <if test="filters != null" >
        filters = #{filters,jdbcType=VARCHAR},
      </if>
      <if test="echo != null" >
        echo = #{echo,jdbcType=VARCHAR},
      </if>
      <if test="extracts != null" >
        extracts = #{extracts,jdbcType=VARCHAR},
      </if>
      <if test="apiExample != null" >
        api_example = #{apiExample,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gm.demo.crawler.dao.model.Extraction" >
    update extraction
    set tab = #{tab,jdbcType=VARCHAR},
      page = #{page,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR},
      filters = #{filters,jdbcType=VARCHAR},
      echo = #{echo,jdbcType=VARCHAR},
      extracts = #{extracts,jdbcType=VARCHAR},
      api_example = #{apiExample,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>